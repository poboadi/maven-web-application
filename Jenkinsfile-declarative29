pipeline {
  agent any
  tools {
    maven "maven3.8.6"
  }
  stages {
   stage('1GetCode'){
    steps{
      sh "echo 'cloning the latest application version' " 
      git branch: 'feature', url: 'https://github.com/LandmarkTechDevOps29/maven-web-application.git'
  }
}
 stage('3Test+Build'){
    steps {
      sh "echo 'running JUnit-test-cases' "
      sh "echo 'testing must passed to create artifacts' "
      sh "mvn clean package"
  }
}
  stage('4CodeQuality'){
    steps{
      sh "echo 'Performing CodeQualityAnalysis' "
      sh "mvn sonar:sonar"
  }
 }
 stage('5uploadNexus'){
    steps{
      sh "mvn deploy"
    }
 }
  stage('8deploy2prod'){
    steps{
    deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://13.56.237.83:8080/')], contextPath: null, war: 'target/*war'
    }
  }
}
  post{
    success{
      emailext body: '''Hi guys,
Good job build and deployment is successful.

Thanks
Landmark''', recipientProviders: [buildUser(), developers()], subject: 'success', to: 'paypal-team@gmail.com'
}
   failure{
     emailext body: '''Hi guys,
Build failed. Please resolve issues.

Thanks
Landmark''', recipientProviders: [buildUser(), developers()], subject: 'success', to: 'paypal-team@gmail.com'
   }
}
}
